#Simon Krkyasharyan
#521030990008

# /* linked list element */
# typedef struct ELE {
#     long val;
#     struct ELE *next;
# } *list_ptr;

# /* rsum_list - Recursive version of sum_list */
# long rsum_list(list_ptr ls)
# {
#     if (!ls)
# 	return 0;
#     else {
# 	long val = ls->val;
# 	long rest = rsum_list(ls->next);
# 	return val + rest;
#     }
# }


.pos 0
    irmovq stack, %rsp
    call main
    halt

# Sample linked list
.align 8
ele1:
.quad 0x00a
.quad ele2
ele2:
.quad 0x0b0
.quad ele3
ele3:
.quad 0xc00
.quad 0

main:
    irmovq ele1, %rdi
    call rsum_list
    ret

rsum_list:
    pushq %r9
    xorq  %rax, %rax   
    andq  %rdi, %rdi
    jne   L2
    popq  %r9
    ret
L2:
    mrmovq 0(%rdi), %r9
    mrmovq 8(%rdi), %rdi
    call rsum_list
    addq   %r9, %rax
    popq  %r9
    ret

.pos 0x300
    stack:

